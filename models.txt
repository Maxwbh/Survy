# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.
#
# Also note: You'll have to insert the output of 'django-admin sqlcustom [app_label]'
# into your database.
from __future__ import unicode_literals

from django.db import models


class ScAmountReceivedTbl(models.Model):
    amt_rec_id = models.AutoField(primary_key=True)
    customer_id = models.IntegerField(blank=True, null=True)
    ref_plan_id = models.IntegerField(blank=True, null=True)
    amount = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    date_received = models.DateTimeField(blank=True, null=True)
    transaction_type = models.IntegerField(blank=True, null=True)
    timestamp = models.DateTimeField()
    amt_rec_status = models.IntegerField()
    gateway_type = models.CharField(max_length=15, blank=True, null=True)
    transaction_num = models.TextField(blank=True, null=True)
    added_by = models.CharField(max_length=45, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'sc_amount_received_tbl'


class ScAnswerSetNameTbl(models.Model):
    answer_set_id = models.AutoField(primary_key=True)
    answer_set_name = models.CharField(max_length=50, blank=True, null=True)
    answer_set_type = models.IntegerField(blank=True, null=True)
    timestamp = models.DateTimeField()
    answer_set_status = models.IntegerField()
    added_by = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'sc_answer_set_name_tbl'


class ScAnswerSetValuesTbl(models.Model):
    answer_value_id = models.AutoField(primary_key=True)
    answer_set_id = models.IntegerField(blank=True, null=True)
    answer_text = models.CharField(max_length=250, blank=True, null=True)
    answer_value = models.CharField(max_length=20, blank=True, null=True)
    timestamp = models.DateTimeField()
    answer_value_status = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'sc_answer_set_values_tbl'


class ScAnswerTypeTbl(models.Model):
    ans_type_id = models.AutoField(primary_key=True)
    question_id = models.IntegerField(blank=True, null=True)
    ans_type = models.CharField(max_length=15, blank=True, null=True)
    ans_position = models.IntegerField(blank=True, null=True)
    timestamp = models.DateTimeField()
    ans_type_status = models.IntegerField()
    free_field = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'sc_answer_type_tbl'


class ScAnswerValuesTbl(models.Model):
    ans_val_id = models.AutoField(primary_key=True)
    ans_id = models.IntegerField(blank=True, null=True)
    ans_text = models.TextField(blank=True, null=True)
    other_ans_text = models.TextField(blank=True, null=True)
    ans_val = models.CharField(max_length=20, blank=True, null=True)
    sub_question = models.CharField(max_length=45, blank=True, null=True)
    timestamp = models.DateTimeField()
    ans_val_status = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'sc_answer_values_tbl'


class ScBankdetailTbl(models.Model):
    bankpay_id = models.CharField(primary_key=True, max_length=15)
    cus_plan_id = models.CharField(max_length=15, blank=True, null=True)
    amnt_rec_id = models.CharField(max_length=15, blank=True, null=True)
    bank_name = models.TextField(blank=True, null=True)
    bank_beneficiary = models.TextField(blank=True, null=True)
    amount = models.CharField(max_length=10, blank=True, null=True)
    order_date = models.DateTimeField(blank=True, null=True)
    status = models.IntegerField(blank=True, null=True)
    cusotmer_id = models.IntegerField(blank=True, null=True)
    bank_account = models.TextField(blank=True, null=True)
    bank_iban = models.TextField(blank=True, null=True)
    bank_swift = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'sc_bankdetail_tbl'


class ScBanktransferDocTbl(models.Model):
    doc_id = models.AutoField(primary_key=True)
    amt_received_id = models.IntegerField(blank=True, null=True)
    doc_name = models.CharField(max_length=100, blank=True, null=True)
    timestamp = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'sc_banktransfer_doc_tbl'


class ScCommissionPaymentTbl(models.Model):
    pay_id = models.AutoField(primary_key=True)
    partner_id = models.IntegerField(blank=True, null=True)
    amount = models.DecimalField(max_digits=10, decimal_places=3, blank=True, null=True)
    payment_done_by = models.IntegerField(blank=True, null=True)
    payment_date = models.DateTimeField()
    status = models.IntegerField()
    timestamp = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'sc_commission_payment_tbl'


class ScContactEmaillistTbl(models.Model):
    email_id = models.AutoField(primary_key=True)
    contact_list_id = models.IntegerField(blank=True, null=True)
    contact_email = models.CharField(max_length=50, blank=True, null=True)
    contact_name = models.CharField(max_length=70, blank=True, null=True)
    title = models.CharField(max_length=100, blank=True, null=True)
    timestamp = models.DateTimeField()
    contact_email_status = models.IntegerField()
    subscribe_status = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'sc_contact_emaillist_tbl'


class ScContactTbl(models.Model):
    contact_list_id = models.AutoField(primary_key=True)
    added_by_id = models.IntegerField(blank=True, null=True)
    contact_list_name = models.CharField(max_length=50, blank=True, null=True)
    timestamp = models.DateTimeField()
    list_status = models.IntegerField()
    list_type = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'sc_contact_tbl'


class ScCountryTbl(models.Model):
    iso = models.CharField(primary_key=True, max_length=2)
    name = models.CharField(max_length=80)
    printable_name = models.CharField(max_length=80)
    iso3 = models.CharField(max_length=3, blank=True, null=True)
    numcode = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'sc_country_tbl'


class ScCustomerDetailsTbl(models.Model):
    user_detail_id = models.AutoField(primary_key=True)
    login_id = models.IntegerField(blank=True, null=True)
    added_by_id = models.CharField(max_length=15, blank=True, null=True)
    cur_plan_id = models.IntegerField(blank=True, null=True)
    name = models.CharField(max_length=50, blank=True, null=True)
    address = models.TextField(blank=True, null=True)
    phone = models.CharField(max_length=15, blank=True, null=True)
    company_name = models.CharField(max_length=45, blank=True, null=True)
    language_code = models.CharField(max_length=5, blank=True, null=True)
    timestamp = models.DateTimeField()
    user_status = models.IntegerField()
    company_address = models.CharField(max_length=200, blank=True, null=True)
    company_tax_id = models.CharField(max_length=45, blank=True, null=True)
    company_tax_ofc = models.CharField(max_length=100, blank=True, null=True)
    country = models.CharField(max_length=45, blank=True, null=True)
    city = models.CharField(max_length=45, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'sc_customer_details_tbl'


class ScCustomerPlanDetailsTbl(models.Model):
    cus_plan_id = models.AutoField(primary_key=True)
    customer_id = models.IntegerField(blank=True, null=True)
    plan_id = models.IntegerField(blank=True, null=True)
    plan_add_date = models.DateTimeField(blank=True, null=True)
    plan_start_date = models.DateTimeField(blank=True, null=True)
    plan_end_date = models.DateTimeField(blank=True, null=True)
    timestamp = models.DateTimeField()
    cus_plan_status = models.IntegerField()
    added_by = models.CharField(max_length=45, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'sc_customer_plan_details_tbl'


class ScCustomerResponsePlanTbl(models.Model):
    cus_res_plan_id = models.AutoField(primary_key=True)
    customer_id = models.IntegerField(blank=True, null=True)
    survey_id = models.IntegerField(blank=True, null=True)
    res_plan_id = models.IntegerField(blank=True, null=True)
    date = models.DateTimeField(blank=True, null=True)
    timestamp = models.DateTimeField()
    cus_res_plan_status = models.IntegerField()
    added_by = models.CharField(max_length=45, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'sc_customer_response_plan_tbl'


class ScLanguagesTbl(models.Model):
    lang_id = models.AutoField(primary_key=True)
    lang_name = models.TextField(blank=True, null=True)
    lang_code = models.TextField(blank=True, null=True)
    lang_status = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'sc_languages_tbl'


class ScLoginTbl(models.Model):
    login_id = models.AutoField(primary_key=True)
    email = models.CharField(max_length=70, blank=True, null=True)
    user_name = models.CharField(max_length=45, blank=True, null=True)
    pwd = models.CharField(max_length=25, blank=True, null=True)
    user_type = models.CharField(max_length=5, blank=True, null=True)
    timestamp = models.DateTimeField()
    login_status = models.IntegerField()
    confirm_code = models.CharField(max_length=15, blank=True, null=True)
    add_date = models.DateTimeField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'sc_login_tbl'


class ScPartnerDetailsTbl(models.Model):
    partner_id = models.IntegerField(primary_key=True)
    f_name = models.CharField(max_length=25, blank=True, null=True)
    l_name = models.CharField(max_length=25, blank=True, null=True)
    company_name = models.CharField(max_length=100, blank=True, null=True)
    city = models.CharField(max_length=25, blank=True, null=True)
    address = models.TextField(blank=True, null=True)
    telephone = models.CharField(max_length=20, blank=True, null=True)
    id_tax_num = models.CharField(max_length=20, blank=True, null=True)
    tax_office = models.CharField(max_length=20, blank=True, null=True)
    website = models.CharField(max_length=70, blank=True, null=True)
    commission = models.CharField(max_length=10, blank=True, null=True)
    payment_method = models.IntegerField(blank=True, null=True)
    timestamp = models.DateTimeField()
    partner_status = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'sc_partner_details_tbl'


class ScPersonalizeMsgTbl(models.Model):
    personalize_msg_id = models.AutoField(primary_key=True)
    personalize_msg = models.TextField(blank=True, null=True)
    name = models.CharField(max_length=45, blank=True, null=True)
    customer_id = models.CharField(max_length=45, blank=True, null=True)
    timestamp = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'sc_personalize_msg_tbl'


class ScPlanFeatureTbl(models.Model):
    feature_id = models.AutoField(primary_key=True)
    plan_id = models.IntegerField()
    feature_name = models.TextField(blank=True, null=True)
    feature_response = models.IntegerField(blank=True, null=True)
    timestamp = models.DateTimeField()
    feature_status = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'sc_plan_feature_tbl'


class ScPlanTbl(models.Model):
    plan_id = models.AutoField(primary_key=True)
    plan_name = models.CharField(max_length=100, blank=True, null=True)
    num_of_survey = models.IntegerField(blank=True, null=True)
    num_of_questions_per_survey = models.IntegerField(blank=True, null=True)
    num_of_responses_per_survey = models.IntegerField(blank=True, null=True)
    plan_cost = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    plan_duration = models.IntegerField(blank=True, null=True)
    timestamp = models.DateTimeField()
    plan_status = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'sc_plan_tbl'


class ScQuestionTbl(models.Model):
    question_id = models.AutoField(primary_key=True)
    questionnaire_id = models.IntegerField(blank=True, null=True)
    question_text = models.TextField(blank=True, null=True)
    required = models.IntegerField(blank=True, null=True)
    timestamp = models.DateTimeField()
    question_status = models.IntegerField()
    other_question_text = models.TextField(blank=True, null=True)
    ques_order = models.IntegerField(blank=True, null=True)
    question_type = models.IntegerField(blank=True, null=True)
    note = models.TextField(blank=True, null=True)
    ans_position = models.IntegerField(blank=True, null=True)
    free_field = models.IntegerField(blank=True, null=True)
    anstype_value = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'sc_question_tbl'


class ScQuestionnaireTbl(models.Model):
    questionnaire_name_id = models.AutoField(primary_key=True)
    survey_id = models.IntegerField()
    questionnaire_name = models.CharField(max_length=100, blank=True, null=True)
    other_questionnaire_name = models.CharField(max_length=100, blank=True, null=True)
    added_by_id = models.IntegerField(blank=True, null=True)
    timestamp = models.DateTimeField()
    questionnaire_status = models.IntegerField()
    sec_order = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'sc_questionnaire_tbl'


class ScRespondentTbl(models.Model):
    respondent_id = models.AutoField(primary_key=True)
    email_id = models.CharField(max_length=100, blank=True, null=True)
    response_code = models.CharField(max_length=15, blank=True, null=True)
    survey_id = models.IntegerField(blank=True, null=True)
    date = models.DateTimeField(blank=True, null=True)
    timestamp = models.DateTimeField()
    respondent_status = models.IntegerField()
    list_id = models.CharField(max_length=25, blank=True, null=True)
    after_hour = models.CharField(max_length=45, blank=True, null=True)
    mail_send_status = models.IntegerField()
    sender_email_id = models.CharField(max_length=500, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'sc_respondent_tbl'


class ScResponsePlanTbl(models.Model):
    res_plan_id = models.AutoField(primary_key=True)
    num_of_responses = models.IntegerField(blank=True, null=True)
    plan_cost = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    timestamp = models.DateTimeField()
    res_plan_status = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'sc_response_plan_tbl'


class ScSalesmanDetailsTbl(models.Model):
    salesman_id = models.IntegerField(primary_key=True)
    partner_id = models.IntegerField()
    f_name = models.CharField(max_length=25, blank=True, null=True)
    l_name = models.CharField(max_length=25, blank=True, null=True)
    city = models.CharField(max_length=50, blank=True, null=True)
    address = models.TextField(blank=True, null=True)
    telephone = models.CharField(max_length=20, blank=True, null=True)
    timestamp = models.DateTimeField()
    salesman_status = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'sc_salesman_details_tbl'


class ScSurveyAllotmentTbl(models.Model):
    allot_id = models.AutoField(primary_key=True)
    user_id = models.IntegerField()
    added_by_id = models.IntegerField()
    survey_id = models.IntegerField()
    add_date = models.DateTimeField()
    status = models.IntegerField()
    timestamp = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'sc_survey_allotment_tbl'


class ScSurveyLanguageTextTbl(models.Model):
    other_langtxt_id = models.AutoField(primary_key=True)
    survey_id = models.IntegerField(blank=True, null=True)
    survey_lang_id = models.IntegerField(blank=True, null=True)
    questionaire_id = models.IntegerField(blank=True, null=True)
    question_id = models.IntegerField(blank=True, null=True)
    ans_val_id = models.IntegerField(blank=True, null=True)
    survey_name = models.TextField(blank=True, null=True)
    survey_descp = models.TextField(blank=True, null=True)
    questionaire_text = models.TextField(blank=True, null=True)
    question_text = models.TextField(blank=True, null=True)
    ans_text = models.CharField(max_length=65, blank=True, null=True)
    type_status = models.IntegerField(blank=True, null=True)
    question_custommsg = models.TextField(blank=True, null=True)
    note_text = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'sc_survey_language_text_tbl'


class ScSurveyPasswordTbl(models.Model):
    surveypwd_id = models.AutoField(primary_key=True)
    survey_id = models.CharField(max_length=15, blank=True, null=True)
    survey_password = models.CharField(max_length=45, blank=True, null=True)
    use_status = models.IntegerField(blank=True, null=True)
    added_by_id = models.IntegerField(blank=True, null=True)
    creation_date = models.DateTimeField()
    expiry_date = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'sc_survey_password_tbl'


class ScSurveyResponseTbl(models.Model):
    response_id = models.AutoField(primary_key=True)
    respondent_id = models.IntegerField(blank=True, null=True)
    survey_id = models.IntegerField(blank=True, null=True)
    question_id = models.IntegerField(blank=True, null=True)
    ans_text = models.TextField(blank=True, null=True)
    other_text = models.CharField(max_length=255, blank=True, null=True)
    other_option = models.IntegerField()
    date = models.DateTimeField(blank=True, null=True)
    timestamp = models.DateTimeField()
    response_status = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'sc_survey_response_tbl'


class ScSurveyTbl(models.Model):
    survey_id = models.AutoField(primary_key=True)
    added_by_id = models.IntegerField(blank=True, null=True)
    survey_title = models.CharField(max_length=50, blank=True, null=True)
    survey_description = models.TextField(blank=True, null=True)
    other_survey_title = models.CharField(max_length=50, blank=True, null=True)
    other_survey_description = models.TextField(blank=True, null=True)
    other_survey_custommsg = models.TextField(blank=True, null=True)
    lang_id = models.CharField(max_length=10, blank=True, null=True)
    survey_image = models.CharField(max_length=45, blank=True, null=True)
    timestamp = models.DateTimeField()
    survey_status = models.IntegerField()
    survey_custommsg = models.TextField(blank=True, null=True)
    ref_survey_id = models.CharField(max_length=45, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'sc_survey_tbl'


class ScUserPerTbl(models.Model):
    user_per_id = models.AutoField(primary_key=True)
    user_id = models.IntegerField()
    survey_list_per = models.IntegerField()
    survey_fill_per = models.IntegerField()
    translate_survey_per = models.IntegerField()
    mail_reports_per = models.IntegerField()
    ce_email_list_per = models.IntegerField()
    survey_reports_per = models.IntegerField()
    account_details_per = models.IntegerField()
    payment_details_per = models.IntegerField()
    ce_survey_new_per = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'sc_user_per_tbl'
